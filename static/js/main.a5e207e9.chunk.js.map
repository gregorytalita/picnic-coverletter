{"version":3,"sources":["core/constants.js","components/Clouds/Clouds.jsx","components/Faces/Faces.jsx","core/functions.js","components/ConfettiDot/ConfettiDot.jsx","components/ConfettiCannon/ConfettiCannon.jsx","components/ToDo/ToDo.jsx","components/Introduction/Introduction.jsx","components/ToDoList/ToDoList.jsx","components/ParallaxLayerCentered/ParallaxLayerCentered.jsx","components/ContentWrapper/ContentWrapper.jsx","App.js","serviceWorker.js","index.js","assets/cloud.svg","assets/thinking.svg"],"names":["confettiColors","positiveCheck","toDos","Clouds","offset","speed","style","opacity","alt","src","Cloud","display","width","marginLeft","Faces","Thinking","randomInRange","min","max","Math","random","randomIntInRange","floor","randomFromArray","array","length","flipCoin","round","StyledConfettiDot","styled","svg","AnimatedConfettiDot","animated","Circle","color","size","cx","cy","r","fill","Triangle","flipped","points","Square","height","Dot","anchorRef","initialHorizontal","initialUpwards","rotate","current","initialX","initialY","getBoundingClientRect","alignWithAnchor","useSpring","config","default","from","horizontal","upwards","to","totalUpwards","totalHorizontal","startTime","Date","getTime","lastTime","transform","interpolate","v","h","currentTime","duration","finalY","Shape","getRandomShape","ConfettiCannon","colors","dotCount","Array","map","_","index","ConfettiDot","key","ToDoItem","div","Styled","StyledSpan","span","ToDo","text","setPoints","confettiAnchorRef","useRef","useState","done","setDone","onClick","currentPoints","type","checked","Introduction","texts","ref","items","set","transitions","useTransition","innerHeight","enter","leave","update","reset","useCallback","clearTimeout","forEach","time","push","setTimeout","useEffect","item","props","rest","className","overflow","ToDoListStyle","ToDoList","toDo","ParallaxLayerCentered","ParallaxLayer","ContentWrapper","App","pages","factor","textAlign","href","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a5e207e9.chunk.js","sourcesContent":["export const confettiColors = ['blue', 'red', 'yellow', 'purple']\nexport const positiveCheck = ['I`m perfect for that!', 'Check!', 'I`m waiting you call']\nexport const toDos = [\n  'Always motivated', \n  'Is always hungry for knowledge', \n  'Knows how to work with Team', \n  'Passionated for code',\n  'Thinks that quality is better than quantity!',\n  'Would bring a delicious carrot cake at the first day of work',\n  'Knows Javascript and Web Techonologies',\n  'Wants to make a diference!',\n  'Develop an exclusive Cover Letter application to catch your attention!'\n]\n","import React from 'react'\nimport { ParallaxLayer } from 'react-spring/renderprops-addons'\nimport Cloud from '../../assets/cloud.svg'\n\nconst Clouds = () => (\n  <>\n    <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\n      <img alt='Cloud svg' src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n      <img alt='Cloud svg' src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\n      <img alt='Cloud svg' src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n      <img alt='Cloud svg' src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2 }}>\n      <img alt='Cloud svg' src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n      <img alt='Cloud svg' src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\n      <img alt='Cloud svg' src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n      <img alt='Cloud svg' src={Cloud} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n      <img alt='Cloud svg' src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6 }}>\n      <img alt='Cloud svg' src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n      <img alt='Cloud svg' src={Cloud} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n    </ParallaxLayer>\n  </>\n)\n\nexport default Clouds\n","import React from 'react'\nimport { ParallaxLayer } from 'react-spring/renderprops-addons'\n\nimport Thinking from '../../assets/thinking.svg'\n\nconst Faces = () => (\n  <>\n    <ParallaxLayer offset={0} speed={0.8} style={{ opacity: 0.1 }}>\n      <img alt='Thinking Face svg' src={Thinking} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n      <img alt='Thinking Face svg' src={Thinking} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={0.5} speed={0.5} style={{ opacity: 0.1 }}>\n      <img alt='Thinking Face svg' src={Thinking} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n      <img alt='Thinking Face svg' src={Thinking} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={0} speed={0.2} style={{ opacity: 0.2 }}>\n      <img alt='Thinking Face svg' src={Thinking} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n      <img alt='Thinking Face svg' src={Thinking} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={0.3} speed={-0.1} style={{ opacity: 0.4 }}>\n      <img alt='Thinking Face svg' src={Thinking} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n      <img alt='Thinking Face svg' src={Thinking} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n      <img alt='Thinking Face svg' src={Thinking} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={0.15} speed={0.4} style={{ opacity: 0.6 }}>\n      <img alt='Thinking Face svg' src={Thinking} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n      <img alt='Thinking Face svg' src={Thinking} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n    </ParallaxLayer>\n  </>\n)\n\nexport default Faces\n","export const randomInRange = (min, max) => Math.random() * (max - min) + min\nexport const randomIntInRange = (min, max) => Math.floor(randomInRange(min, max))\nexport const randomFromArray = array => array[randomIntInRange(0, array.length)]\nexport const flipCoin = () => Math.round(Math.random()) === 1\n","import React from 'react'\nimport styled from 'styled-components'\nimport { animated, config, interpolate, useSpring } from 'react-spring'\nimport { randomInRange, randomFromArray, flipCoin } from '../../core/functions'\n\nconst StyledConfettiDot = styled.svg`\n  height: 10px;\n  pointer-events: none;\n  position: absolute;\n  width: 10px;\n  will-change: transform;\n`;\n\nconst AnimatedConfettiDot = animated(StyledConfettiDot)\n\nconst alignWithAnchor = anchorRef => {\n  if (anchorRef.current == null) {\n    return {\n      initialX: 0,\n      initialY: 0\n    }\n  }\n\n  const { height, width } = anchorRef.current.getBoundingClientRect()\n\n  return {\n    initialX: width / 2,\n    initialY: height / 2\n  }\n}\n\nconst Circle = ({ color, size }) => (\n  <circle\n    cx={`${size / 2}`}\n    cy={`${size / 2}`}\n    r={`${(size / 2) * 0.6}`}\n    fill={color}\n  />\n);\n\nconst Triangle = ({ color, size }) => {\n  const flipped = flipCoin()\n  return (\n    <polygon\n      points={`${size / 2},0 ${size},${randomInRange(\n        flipped ? size / 2 : 0,\n        size\n      )} 0,${randomInRange(flipped ? 0 : size / 2, size)}`}\n      fill={color}\n    />\n  )\n}\n\nconst Square = ({ color, size }) => {\n  const flipped = flipCoin()\n  return (\n    <rect\n      height={`${randomInRange(0, flipped ? size : size / 2)}`}\n      width={`${randomInRange(0, flipped ? size / 2 : size)}`}\n      fill={color}\n    />\n  )\n}\n\nconst getRandomShape = (color, size) => {\n  const Shape = randomFromArray([Circle, Square, Triangle])\n  return <Shape color={color} size={size} />\n}\n\nconst Dot = ({\n  anchorRef,\n  color,\n  initialHorizontal,\n  initialUpwards,\n  rotate,\n  size\n}) => {\n  const { initialX, initialY } = alignWithAnchor(anchorRef)\n  const { horizontal, opacity, upwards } = useSpring({\n    config: config.default,\n    from: {\n      horizontal: initialHorizontal,\n      opacity: 80,\n      upwards: initialUpwards\n    },\n    to: {\n      horizontal: 0,\n      opacity: 0,\n      upwards: 0\n    }\n  });\n\n  let totalUpwards = 0\n  let totalHorizontal = 0\n  const startTime = new Date().getTime() / 1000\n  let lastTime = startTime\n  const gravityPerSecond = 30\n\n  return (\n    <AnimatedConfettiDot\n      style={{\n        opacity,\n        transform: interpolate([upwards, horizontal], (v, h) => {\n          const currentTime = new Date().getTime() / 1000;\n          const duration = currentTime - lastTime;\n          const totalDuration = currentTime - startTime;\n          const verticalTraveled = v * duration;\n          const horizontalTraveled = h * duration;\n          totalUpwards += verticalTraveled;\n          totalHorizontal += horizontalTraveled;\n          lastTime = currentTime;\n\n          const totalGravity = gravityPerSecond * totalDuration;\n          const finalX = initialX + totalHorizontal;\n          const finalY = initialY - totalUpwards + totalGravity;\n\n          return `translate3d(${finalX}px, ${finalY}px, 0) rotate(${rotate}deg)`;\n        })\n      }}\n    >\n      {getRandomShape(color, size)}\n    </AnimatedConfettiDot>\n  )\n}\n\nexport default Dot\n","import React from 'react'\nimport ConfettiDot from '../ConfettiDot'\nimport { randomInRange, randomIntInRange } from '../../core/functions'\n\n\nconst ConfettiCannon = ({ anchorRef, colors, dotCount }) => (\n  <>\n    {new Array(dotCount).fill().map((_, index) => (\n      <ConfettiDot\n        key={index}\n        anchorRef={anchorRef}\n        color={colors[randomIntInRange(0, colors.length)]}\n        initialHorizontal={randomInRange(-250, 250)}\n        initialUpwards={randomInRange(200, 700)}\n        rotate={randomInRange(0, 360)}\n        size={randomInRange(8, 12)}\n      />\n    ))}\n  </>\n)\n\nexport default ConfettiCannon\n","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport ConfettiCannon from '../ConfettiCannon'\nimport { positiveCheck } from '../../core/constants'\nimport { randomFromArray } from '../../core/functions'\n\nconst ToDoItem = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  max-width: 800px;\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`\nconst Styled = styled.div`\n  display: inline-block;\n  > input {\n    opacity: 0;\n  }\n  > input + label {\n    position: relative;\n    padding-left: 25px;\n    cursor: pointer;\n    &:before {\n      content: '';\n      position: absolute;\n    }\n    &:after {\n      content: '✔';\n      position: absolute;\n      top: -1px; left: 2px;\n      font-size: 2rem;\n      color: #09ad7e;\n      transition: all .2s;\n    }\n  }\n  > input:not(:checked) + label {\n      &:after {\n        opacity: 0;\n        transform: scale(0);\n      }\n  }\n  > input:disabled:not(:checked) + label {\n      &:before {\n        box-shadow: none;\n        border-color: #bbb;\n        background-color: #ddd;\n      }\n  }\n  > input:checked + label {\n    &:after {\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n  > input:disabled:checked + label {\n    &:after {\n      color: #999;\n    }\n  }\n  > input:disabled + label {\n    color: #aaa;\n  }\n  > input:checked:focus + label, input:not(:checked):focus + label {\n    &:before {\n      border: 1px dotted blue;\n    }\n  }\n`\n\nconst StyledSpan = styled.span`\n  font-size: 1.6rem;\n  color: #c23369;\n  margin-left: 8px;\n`\n\nconst ToDo = ({ colors, text, setPoints }) => {\n  const confettiAnchorRef = useRef()\n  const [done, setDone] = useState(false)\n\n  const handleCheck = () => {\n    setDone(!done)\n    done ? setPoints(currentPoints => currentPoints-=1) : setPoints(currentPoints => currentPoints+=1)\n  }\n\n  return (\n    <ToDoItem>\n      <Styled onClick={handleCheck}>\n        <input\n          type=\"checkbox\"\n          checked={done}\n        />\n        <label>\n          {text}\n        </label>\n        <StyledSpan>\n          { done && randomFromArray(positiveCheck)}\n        </StyledSpan>\n      </Styled>\n      {done && (\n        <ConfettiCannon\n          anchorRef={confettiAnchorRef}\n          colors={colors}\n          dotCount={50}\n        />\n      )}\n    </ToDoItem>\n  )\n}\n\nexport default ToDo\n","import React, { useRef, useState, useEffect, useCallback } from 'react'\nimport { useTransition, animated } from 'react-spring'\nimport './styles.css'\n\nconst Introduction = ({ texts }) => {\n  const ref = useRef([])\n  const [items, set] = useState([])\n\n  const transitions = useTransition(items, null, {\n    from: { opacity: 0, height: 0, innerHeight: 0, transform: 'perspective(600px) rotateX(0deg)', color: '#8fa5b6' },\n    enter: [\n      { opacity: 1, height: 80, innerHeight: 80 },\n      { transform: 'perspective(600px) rotateX(180deg)', color: '#28d79f' },\n      { transform: 'perspective(600px) rotateX(0deg)' },\n    ],\n    leave: [{ color: '#c23369' }, { innerHeight: 0 }, { opacity: 0, height: 0 }],\n    update: { color: '#28b4d7' },\n  })\n\n  const reset = useCallback(() => {\n    ref.current.map(clearTimeout)\n    ref.current = []\n    set([])\n    texts.forEach(({text, time})=> ref.current.push(setTimeout(() => set(text), time)))\n  }, [])\n\n  useEffect(() => reset(), [])\n  return (\n    <div>\n      {transitions.map(({ item, props: { innerHeight, ...rest }, key }) => (\n        <animated.div className='transitions-item' key={key} style={rest}>\n          <animated.div style={{ overflow: 'hidden', height: innerHeight }}>{item}</animated.div>\n        </animated.div>\n      ))}\n    </div>\n  )\n}\n\nexport default Introduction\n","import React from 'react'\nimport styled from 'styled-components'\nimport { confettiColors } from '../../core/constants'\nimport { ToDo } from '../'\n\nconst ToDoListStyle = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n`\n\nconst ToDoList = ({ toDos, setPoints }) => (\n  <ToDoListStyle>\n    {toDos.map(toDo => (\n      <ToDo\n        colors={confettiColors}\n        key={toDo}\n        text={toDo}\n        setPoints={setPoints}\n      />\n    ))}\n  </ToDoListStyle>\n)\n\nexport default ToDoList\n","import styled from 'styled-components'\nimport { ParallaxLayer } from 'react-spring/renderprops-addons'\n\nconst ParallaxLayerCentered = styled(ParallaxLayer)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nexport default ParallaxLayerCentered\n","import styled from 'styled-components'\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 80%;\n`\n\nexport default ContentWrapper\n","import React, { useState } from 'react'\nimport { Parallax } from 'react-spring/renderprops-addons'\nimport { toDos } from './core/constants'\nimport { \n  Clouds, \n  Faces, \n  ToDoList, \n  Introduction,\n  ParallaxLayerCentered,\n  ContentWrapper\n} from './components'\n\nconst App = () => {\n  const [ points, setPoints ] = useState(0)\n\n  const getContact = () => {\n    if(points <= toDos.length/2) {\n      return 'I`m sure that I can do that, let`s grab a coffee and talk more about it'\n    } else if (points >= toDos.length - 2) {\n      return 'When is my first day? I`m more than ready!'\n    } else if (points >= toDos.length/2){\n      return 'Seems like I have almost all qualities...'\n    }\n  }\n\n  return (\n    <Parallax pages={3}>\n      <Clouds />\n      <Faces />\n\n      <ParallaxLayerCentered offset={0} speed={1}>\n        <Introduction texts={[\n          {\n            text: ['Are you looking for', 'a', 'Web Developer?'],\n            time: 1000\n          },\n          {\n            text: ['I think', 'you just found', 'the right candidate'],\n            time: 4500\n          },\n          {\n            text: ['I`m more than ready!', 'Scroll to check it out'],\n            time: 9000\n          }\n        ]}/>\n      </ParallaxLayerCentered>\n\n      <ParallaxLayerCentered factor={1} offset={1} speed={1.5}>\n        <ContentWrapper>\n          <h1 style={{textAlign: 'center'}}>\n            Click at the qualities that you think <br/> the perfect candidate should have/do:\n          </h1>\n          <ToDoList toDos={toDos} setPoints={setPoints}/>\n        </ContentWrapper>\n      </ParallaxLayerCentered>\n\n      <ParallaxLayerCentered factor={1.25} offset={2} speed={0.4}>\n        <ContentWrapper>\n          <h1 style={{textAlign: 'center'}}>\n            {getContact()}          \n          </h1>\n          <p style={{textAlign: 'center'}}>\n            Check out my <a href='https://www.linkedin.com/in/gregory-talita/' target='_blank'>Linkedin</a> or \n            Let's schedule a <a href='mailto:talitagregory@hotmail.com'>call</a>!\n          </p>\n          </ContentWrapper>\n      </ParallaxLayerCentered>\n    </Parallax> \n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/cloud.305b7b7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/thinking.611e6828.svg\";"],"sourceRoot":""}